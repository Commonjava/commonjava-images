[koji]

####################################################
## Minimum configuration for using the Koji add-on.
####################################################

## Global enabled flag. It is disabled by default.
#
# enabled=false

##
## ***********************************************************************
## ***********************************************************************
## ** YOUR GROUP WILL NOT BE ENABLED UNTIL YOU SPECIFY A TARGET FOR IT. **
## ***********************************************************************
## ***********************************************************************
##
## Target group mappings
## These map entry-point group to a sub-group that should contain the Koji build repositories.
##
## NOTE: The keys of these mappings are regular expressions (after the 'target.' prefix)
#
# target.entry-group-pattern=capture-group-name
# target.other-entry-pattern=other-capture
#
## Or, to just enable a group without changing the target
#
# target.public=public
#
##
## Target group mappings for binary (import) builds
## These map entry-point group to a sub-group that should contain the repositories proxying binary Koji builds.
##
# target.binary.build.+=brew-binaries
#
##
## Naming format for repositories proxying normal Koji builds and binary Koji builds.
##
#
# naming.format=koji-${nvr}
# naming.format.binary=koji-binary-${name}-${version}
#

## URL to Koji hub
#
# url=http://my.koji.hub/kojihub

## SSL configuration for client authentication
#
# client.pem.path=${indy.config.dir}/koji/client.pem
# client.pem.password=foobar

## SSL Server PEM, to contain self-signed or internally signed SSL certificate on server
#
# server.pem.path=${indy.config.dir}/koji/server.pem

## Koji's Storage Back-End root URL
#
# storage.root.url=http://my.koji.hub/kojiroot

## Patterns of Koji Tags that are allowed
## NOTE: These are regular expressions. They are additive, and ordered.
#
# tag.pattern=my-.+-candidate
# tag.pattern=your-.+-candidate

#############################
## END: Minimum configuration
#############################

## Artifact Authority Store
#
# If an artifact authority store is configured, the Koji add-on will attempt to verify checksums for at least one
# artifact in any Koji build it attempts to reference (for metadata) or proxy. The *.md5 file that corresponds to the
# Koji build's artifact will be retrieved from the authority store and used to verify the build artifact.
#
# This is useful in cases where Koji output is promoted to a public repository. When this happens, it's still possible
# that Koji contains multiple builds supplying any given artifact that gets promoted. If there are multiple builds
# supplying the same artifact, only the one corresponding to the publicly available artifact should be used. Normally,
# checking the MD5 checksum for the artifact is sufficient to determine whether the build output matches publicly hosted
# content.
#
# If there is no corresponding checksum file in the publicly available content, the build is accepted. Koji builds are
# only rejected by this measure if the checksum is available publicly and DOES NOT match that of the Koji build in question.
#
# If the artifact authority store is empty, this verification measure is disabled.
#
# Example:
# artifact.authorityStore=group:products
#
# In this example, Koji will only proxy or reference build content if it's unavailable from the products group, or has
# a checksum that matches the corresponding checksum file in the products group.
#
# artifact.authorityStore=

## Extra SSL Options: trust self-signed certificates
#
# server.trust.type=self-signed

## Proxy Options
#
# proxy.host=my.proxy.host
# proxy.port=8080
# proxy.user=some-user
# proxy.password=foobar

## Connection Options
#
# max.connections=4
# request.timeout.seconds=10
# download.timeout.seconds=600

