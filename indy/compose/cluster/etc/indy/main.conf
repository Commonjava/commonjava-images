standalone=false
nfc.provider=ispn

cache.keyspace=indycache
cassandra.keyspace.replicas=3

nfc.timeout=300
mdc.headers=User-Agent

# This controls if indy will do downloading when listing a directory content for a remote repo.
# If it is disabled, indy will only list the content that has been cache in local for remote repo.
# Default is not enabled.
# remote.list.download.enabled = false

# This is a list of http request headers to add to MDC (default: component-id)
#mdc.headers =

# Ignore affected groups when doing clean-up for the promotion
#
#affected.groups.exclude=^build-\d+

# Group repository filters to improve artifact retrieval (default false)
#
#repository.filter.enabled=true

# Scan matched hosted repository to build group:artifact (GA) cache (default null, means no cache)
#
#ga-cache.store.pattern=^build-\d+

[cassandra]
enabled=true

cassandra.host=cassandra-db
cassandra.port=9042
cassandra.user=cassandra
cassandra.pass=cassandra

[storage-default]

# This is the location where proxied / uploaded / generated repository 
# content is stored. It is distinct from configuration state and other
# persistent data related to addons.
storage.dir=${indy.home}/var/lib/indy/storage
storage.gc.graceperiodinhours=12
storage.gc.batchsize=100
storage.cassandra.keyspace=indystorage


[scheduledb]
schedule.keyspace=indy_schedule

[ssl]
######################################################################
# Indy will require SSL connections to remote repositories by default.
######################################################################

# SSL validation for all remote repositories
remote.ssl.required = true

######################################################################
# Specify what hosts are on the local network, where SSL connections
# are not required.
#
# Example:
# remote.nossl.hosts = *.redhat.com, 10.0.*
######################################################################

# Regexes of allowed NON-SSL remote hosts separated by ","
remote.nossl.hosts = localhost,127.0.0.1

######################################################################

[ui]

# UI files are stored here, for easy access to allow customization.
ui.dir=${indy.home}/var/lib/indy/ui


[flatfiles]

# This is where configurations and persistent state related to both the core
# functions of Indy and its addons are stored.
data.dir=${indy.home}/var/lib/indy/data

# This is where temporary files used in various calculations for addon functions
# are stored.
work.dir=${indy.home}/var/lib/indy/work



# [threadpools]
#
# This configures the Weft threadpool-injector. It is used to initialize 
# threadpools with custom names, sizes, and thread priorities, and inject
# them via the CDI annotation: @ExecutorConfig
# (class name is: org.commonjava.cdi.util.weft.ExecutorConfig)
#
# defaultThreads=NN # Default for this is calculated by: Runtime.getRuntime().availableProcessors() * 2
# defaultPriority=8
# For a custom threadpool called 'mypool' you might configure it using:
# mypool.threads=NN
# mypool.priority=N

# [folo]
#
# folo.cassandra=true
# folo.cassandra.keyspace=folo
# folo.cassandra.tablename=records



 
[content-browse]
# Content browse supplied directory listing browse functions
# By default, the add-on is enabled.
#
#enabled=true

content.browse.ui.dir=${indy.home}/var/lib/indy/ui/content-browse

[content-index]
#enabled=false

# This property is used to control if authoritative index is enabled. the authoritative index means:
# in terms of performance consideration, we will use content-index as the one-time check for the content
# access, and if not found in content indexing, will treat it as "no content" and bypass the following access to the storage.
#support.authoritative.indexes=true

# This property is used to enable content index warmer, which will scan all repos and load all artifacts
# into content index when startup.
# index.warmer.enabled=true


[durable-state]
folo.storage=infinispan
store.storage=infinispan
schedule.storage=infinispan

[environment]
mdc.env.OPENSHIFT_BUILD_NAMESPACE = NAMESPACE
mdc.env.OPENSHIFT_BUILD_NAME = BUILD_NAME
mdc.env.OPENSHIFT_BUILD_COMMIT = BUILD_COMMIT
mdc.env.HOSTNAME = HOSTNAME


[event-audit]
# enabled: By default, the event audit add-on is disabled.
enabled=false


[event-handler]
file.event.handler=default


[folo]
# Folo is the add-on that can track content accesses for a repository or group.
# Currently, this includes uploads and downloads.
#
# The record consists of a section per originating repository (useful for tracking items back to the repository where they originally entered
# Indy's domain), and two sorted lists of paths for content accesses associated with that origin: downloads, and uploads.
#
# enabled: By default, the folo add-on is enabled.
#
#enabled=true

# By default, any content stored directly in a group is NOT tracked (as of Indy 1.1.7).
#
# This is mainly because content stored directly in a group is generally derived from something else (like aggregated
# version metadata or directory listings), and can be recalculated from the rest of the tracking record contents.
#
# In some environments, a group may be created for a specific, targeted operation and then deleted when that operation
# completes. If the operation uses Folo to create a log of what content was used, this tracking record may contain
# orphaned references to aggregated metadata (or other types) files specific to the group that was deleted.
#
#track.group.content=false
folo.cassandra=false
folo.cassandra.keyspace=folo
# folo.cassandra.tablename=records

[httprox]
# HTTProx is an Indy add-on that provides generic content proxying with local storage.
# By default, the add-on is disabled.
#
#enabled=false

# By default, HTTProx listens on port 8081.
#
#port=8081

# File matching below patterns are not cached. Patterns split by comma.
#
#nocache.patterns=.+nocache

# Auth cache expiration in hours. Default 1.
#
#auth.cache.expiration.hours=1

# By default MITM server is diabled
#
#MITM.enabled=false

# MITM CA private key file in DER format. Required if MITM server is enabled.
#
#MITM.ca.key=${indy.home}/etc/indy/ssl/ca.der

# MITM CA certificate file. Required if MITM server is enabled.
#
#MITM.ca.cert=${indy.home}/etc/indy/ssl/ca.crt

# MITM generated host certificate DN template. Required if MITM server is enabled.
# The <host> will be replaced with real hostname in http request.
#
#MITM.dn.template=CN=<host>, O=Test Org

# MITM socket timeout. MITM server may take a long time to download a file. This property controls how much time the
# SSL tunnel will last before giving up. Default 30.
#
#MITM.so.timeout.minutes=30

[implied-repos]
# Implied-Repos is the add-on that skims POMs as they are proxied, looking for repository/pluginRepository
# declarations. When it finds one, it figures out which groups contain the repository that contained the POM,
# then auto-creates and adds the POM-declared repositories to the groups. It also annotates the source repo
# with implied repositories to ensure that adding the repo to a group triggers addition of the implied
# repositories.
#
# By default, the add-on is disabled.
#
# This is because auto-management of implied repositories is currently add-only. When a repository has 
# implied repos which have been added to its groups, then that repository is removed, it's currently
# not possible to determine whether the user meant to leave the implied repositories in place. So it's not
# safe to auto-remove them.
#
#enabled=false

# By default, repositories that don't enable release artifacts (usually these are snapshot repos) are 
# excluded from being implied.
#
#include.snapshots=false

# You can blacklist repositories from being implied using 'disabled' entries. These should contain
# either the hostname or host:port.
#
# Disable Codehaus, since it's defunct.
disable=snapshots.repository.codehaus.org
disable=repository.codehaus.org

# You can enable specific groups (or group-name patterns) for use with implied repositories using the 'enabled.group'
# property.
#####################################################################################
##
## NOTE: Implied repositories WILL NOT work unless you add one or more groups here!
##
#####################################################################################
#
#enabled.group=my.+group
enabled.group=public

[infinispan-cluster]
# By default, the cluster cache is disabled. An alternative local embedded cache will be returned when this is disabled.
#
# enabled=true

# JGroups gossip router host list, i.e.: HostA[12001],HostB[12001]
#
# jgroups.gossip_router_hosts="10.66.136.71[12001]"

# By default, the tcp bind port for jgroups is 7800
#
# jgroups.tcp.bind_port=7800

[infinispan-remote]
# By default, the remote cache is disabled. An alternative embedded cache will be returned when this is disabled.
#
#enabled=true
#hotrod.client.config=/etc/indy/conf/hotrod-client.properties

[_internal]
# By default, we disable ArtifactStore validation when repos are stored / updated. This is a feature flag for that
# behavior, and we'll change this value when we change the default value in the InternalFeatureConfig class.
#store.validation.enabled=false

[keycloak]
# Keycloak is the project used to secure access to Indy
#
# Properties that require you to fill in some value (and have no default) are marked as REQUIRED. 
#
# If you would prefer, you can also configure the following files directly to tailor your Keycloak security:
# 
#  - Server: etc/indy/keycloak/keycloak.json
#  - UI: etc/indy/keycloak/keycloak-ui.json
# By default, security is disabled!
#
#enabled=false

# REQUIRED: This is the base URL for your Keycloak server. It is required for enabling BASIC authentication
# on your server.
#
# This value can be accessed in your keycloak.json AND keycloak-ui.json files via the ${keycloak.url}
# property.
#
# For example:
#url=http://keycloak.myco.com/auth/
#
#url=

# REQUIRED: Fill this out with the value found in the 'Secret' field under:
#    $your-realm > Clients > $server-resource > Credentials
#
# (on the Keycloak server). This value is required in order to enable BASIC authentication for your server.
#
# This value can also be accessed in your keycloak.json file via the ${keycloak.serverCredentialSecret}
# property.
#
#server.credential.secret=

# OPTIONAL: You must have a value here that corresponds to a client on your Keycloak realm. This client MUST
# use 'confidential' access type in order to enable BASIC authentication (requires 'bearer-only' otherwise).
# The default value is 'indy'.
#
# This value can be accessed in your keycloak.json file via the ${keycloak.serverResource} property. 
#
#server.resource=indy

# OPTIONAL: This is the resource name (the client in your Keycloak realm) for use with the Indy UI. It MUST
# correspond to a client that uses the 'public' access type. The default value is 'indy-ui'.
#
# This value can also be accessed in your keycloak-ui.json file via the ${keycloak.uiResource} property.
#
#ui.resource=indy-ui

# OPTIONAL: This is the public key for your realm. It MAY be used in your keycloak.json and keycloak-ui.json
# files via the ${keycloak.realmPublicKey} property.
#
#realm.public.key=

# OPTIONAL: This is the Keycloak realm to use. You can access this value in your keycloak.json and keycloak-ui.json
# files via the property ${keycloak.realm}. The default value is 'indy'.
#
#realm=indy

# By default, use etc/indy/keycloak/keycloak.json to define keycloak config for the server.
#   See: https://docs.jboss.org/keycloak/docs/1.2.0.CR1/userguide/html/ch08.html#adapter-config
#
#keycloak.json=${indy.config.dir}/keycloak/keycloak.json

# By default, use etc/indy/keycloak/keycloak-ui.json to define keycloak config for the UI.
#   See: https://docs.jboss.org/keycloak/docs/1.2.0.CR1/userguide/html/ch08.html#adapter-config
#
#keycloak-ui.json=${indy.config.dir}/keycloak/keycloak.json

# By default, use etc/indy/keycloak/security-bindings.json to define security bindings and constraints
#
#security-bindings.json=${indy.config.dir}/keycloak/security-bindings.json

[koji]

####################################################
## Minimum configuration for using the Koji add-on.
####################################################

## Global enabled flag. It is disabled by default.
#
# enabled=false

##
## ***********************************************************************
## ***********************************************************************
## ** YOUR GROUP WILL NOT BE ENABLED UNTIL YOU SPECIFY A TARGET FOR IT. **
## ***********************************************************************
## ***********************************************************************
##
## Target group mappings
## These map entry-point group to a sub-group that should contain the Koji build repositories.
##
## NOTE: The keys of these mappings are regular expressions (after the 'target.' prefix)
#
# target.entry-group-pattern=capture-group-name
# target.other-entry-pattern=other-capture
#
## Or, to just enable a group without changing the target
#
# target.public=public
#
##
## Target group mappings for binary (import) builds
## These map entry-point group to a sub-group that should contain the repositories proxying binary Koji builds.
##
# target.binary.build.+=brew-binaries
#
##
## Naming format for repositories proxying normal Koji builds and binary Koji builds.
##
#
# naming.format=koji-${nvr}
# naming.format.binary=koji-binary-${name}-${version}
#

## URL to Koji hub
#
# url=http://my.koji.hub/kojihub

## SSL configuration for client authentication
#
# client.pem.path=${indy.config.dir}/koji/client.pem
# client.pem.password=foobar

## SSL Server PEM, to contain self-signed or internally signed SSL certificate on server
#
# server.pem.path=${indy.config.dir}/koji/server.pem

## Koji's Storage Back-End root URL
#
# storage.root.url=http://my.koji.hub/kojiroot

## Patterns of Koji Tags that are allowed
## NOTE: These are regular expressions. They are additive, and ordered.
#
# tag.pattern=my-.+-candidate
# tag.pattern=your-.+-candidate

#############################
## END: Minimum configuration
#############################

## Artifact Authority Store
#
# If an artifact authority store is configured, the Koji add-on will attempt to verify checksums for at least one
# artifact in any Koji build it attempts to reference (for metadata) or proxy. The *.md5 file that corresponds to the
# Koji build's artifact will be retrieved from the authority store and used to verify the build artifact.
#
# This is useful in cases where Koji output is promoted to a public repository. When this happens, it's still possible
# that Koji contains multiple builds supplying any given artifact that gets promoted. If there are multiple builds
# supplying the same artifact, only the one corresponding to the publicly available artifact should be used. Normally,
# checking the MD5 checksum for the artifact is sufficient to determine whether the build output matches publicly hosted
# content.
#
# If there is no corresponding checksum file in the publicly available content, the build is accepted. Koji builds are
# only rejected by this measure if the checksum is available publicly and DOES NOT match that of the Koji build in question.
#
# If the artifact authority store is empty, this verification measure is disabled.
#
# Example:
# artifact.authorityStore=group:products
#
# In this example, Koji will only proxy or reference build content if it's unavailable from the products group, or has
# a checksum that matches the corresponding checksum file in the products group.
#
# artifact.authorityStore=

## Extra SSL Options: trust self-signed certificates
#
# server.trust.type=self-signed

## Proxy Options
#
# proxy.host=my.proxy.host
# proxy.port=8080
# proxy.user=some-user
# proxy.password=foobar

## Connection Options
#
# max.connections=4
# request.timeout.seconds=10
# download.timeout.seconds=600

[metrics]
enabled = false

# Specify node prefix (on cluster). This prefix will be prepended to all metric names. Default empty.
#
# node.prefix =

# Enable kojiji metrics. Default false.
#
koji.enabled = false

# Enable Infinispan metrics. Default false.
#
ispn.enabled = false

# Specify ISPN cache gauges. This works only if ispn.enabled is true. Default All. Names are case sensitive.
#
#ispn.gauges = CurrentNumberOfEntries,CurrentNumberOfEntriesInMemory,\
#TotalNumberOfEntries,Hits,Misses,Retrievals,Evictions

# Enable pathDB metrics. Default true.
#
#pathdb.enabled = true

# Specify pathDB operations. Default all.
#
#pathdb.operations = exists,getStorageFile,getFileSystemContaining

# Enable Galley to measure artifact downloading time. Default false.
#
measure.transport = false

# Specify a repository list for those to measure artifact downloading time. This works only if
# measure.transport is true.
#
# Format: comma split item of "<package>:<type>:<name>"
# The default "<package>:<type>" is "maven:remote" if ignored. You may use wildcard '*' so those would be measured
# as a whole, e.g., koji-*
#
# Example: measure.repos = maven:remote:test,public,koji-*
#
#measure.transport.repos = central

# List of reporters (comma-separated). At present, Indy supports reporters:
# reporter = graphite,elasticsearch,console
#
reporter = console

############################################
# Console reporter options
############################################
console.reporter.period = 30

############################################
# GraphiteDB reporter options
############################################

# This is the hostname of GraphiteDB.
graphite.hostname = localhost
# Port of GraphiteDB.
graphite.port = 2003
# Specific prefix for GraphiteDB Item
graphite.reporter.prefix = local.one
# Indy's metrics item have three type: simple,jvm,healthcheck
# Period of simple item for reporting
graphite.reporter.simple.period = 30
# Period of jvm item for reporting
graphite.reporter.jvm.period = 300
# Period of healthcheck item for reporting
graphite.reporter.healthcheck.period = 600

############################################
# Elasticsearch reporter options
############################################

# Specific prefix for Elasticsearch
elk.reporter.prefix = local.one
# Indy's metrics item have three type: simple,jvm,healthcheck.
# Those type have different period of reporter
# Period of simple item for reporting
elk.reporter.simple.period = 30
# Period of jvm item for reporting
elk.reporter.jvm.period = 300
# Period of healthcheck item for reporting
elk.reporter.healthcheck.period = 600
#The index name to index in Elasticsearch
elk.reporter.index = local.one.name
#Configure an array of hosts to send data to.
elk.reporter.hosts = localhost:9200

# Prefetch aims to provide ability to download some important remote repo silently when indy system is not busy.

[prefetch]
# By default, the prefetch is disabled
#
#enabled=false

# Controls how many artifacts will be downloaded in one daemon thread each time. Default is 5
#prefetch.batchsize=5

# Controls the interval for each rescan scheduling. Deafult is 86400s (1d)
#prefetch.rescan.interval.seconds=86400

# Controls the rescan scheduling thread sleeping interval for next checking of rescanable repos rescan actions. Default is 1s
#prefetch.rescan.schedule.seconds=1

[promote]
# enabled: By default, the promote add-on is enabled.
#
#enabled=true

# autolock.hosted.repos: When promoting by group, sources that are hosted repositories can be marked read-only to
# prevent modification of content. This is enabled by default.
# autolock.hosted.repos = true

# basedir: If necessary, you can configure an alternative directory within ${indy.home}/var/lib/indy/data for storing
# promote rules and rule-sets.
#
#basedir=promote

[revisions]
# add-on is NOT enabled by default
#
#enabled=false

# 'push.enabled' determines whether changes get pushed back to the origin git repository.
# Values: true|false
#push.enabled=false

# 'conflict.action' determines what to do with changes that conflict with local configuration files.
# Values:
#   * merge - attempt a git merge
#   * overwrite - keep the copy from the origin repository
#   * keep - keep the local copy
#
#conflict.action=overwrite

# 'data.upstream.url' determines the origin-repository URL for cloning/pulling and pushing changes.
#
#data.upstream.url=git@github.com:myuser/my-indy-config.git

# 'branch.name' determines the branch in the origin repository to clone and pull from.
#
#branch.name=master

# 'user.email' specifies the email to be used for commits originating from this repository manager
#
#user.email=

[scheduler]
#enabled=true
#schedule.cluster.lock.expiration.sec = 3600


[store-manager]
store.manager.keyspace=store_manager

[honeycomb]
# Disabled by default
#enabled = false

#write.key = somekey
#dataset = test

# Some example span configurations

#spans.include=DefaultArtifactStoreQuery,DefaultContentManager,MavenMetadataMerger,getOrderedConcreteStoresInGroup
#spans.exclude=getArtifactStore

# Inject envar to root span fields
#environment.mappings=envar=honeycomb_var,...


# Include addon-specific configurations (or really any configuration) from:
#Include conf.d/*.conf
